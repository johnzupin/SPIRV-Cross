spirv-cross (2021.01.15+276~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Hans-Kristian Arntzen ]
  * Fix switch fallthrough case in some cases.
  * GLSL: Emit GL_EXT_buffer_reference_uvec2 as required.

  [ Bill Hollings ]
  * Add support for additional ops in OpSpecConstantOp.
  * Add tests for OpSpecConstantOp ops OpQuantizeToF16 and OpSRem.
  * MSL: Return fragment function value even when last SPIR-V Op is discard (OpKill).
  * MSL: Add explanatory comment requested in PR review.
  * MSL: Fix location and component variable matching between shader stages.
  * MSL: Selectively enable fast-math in MSL code to match Vulkan CTS results.

  [ Hans-Kristian Arntzen ]
  * Remove obsolete Travis CI YML.
  * Remove tests for Ubuntu 16.04.

  [ Bill Hollings ]
  * MSL: Track location component to match vecsize between shader stages.
  * MSL: Honor DecorationNoContraction when compiling using fast-math.
  * MSL: Honor infinities in OpQuantizeToF16 when compiling using fast-math.
  * MSL: Consolidate spvQuantizeToF16() functions into a single template function.
  * MSL: Use vec<T, n> in template SpvHalfTypeSelector for function spvQuantizeToF16().
  * MSL: Support synthetic functions in function constants.

  [ Hans-Kristian Arntzen ]
  * MSVC: Workaround crtdbg macroing free().
  * CLI/HLSL: Don't set explicit binding for synthesized NumWorkgroups CBV.
  * HLSL: Ensure synthetic NumWorkgroups variable is considered active.
  * Improve handling of INT_MIN/INT64_MIN literals.
  * Fix wrong detection of trivial_mix_op.
  * Test behavior around OpSelect with matrices.

  [ 丛越 ]
  * Support Metal 2.4 Intersection Query, Implement GL_EXT_ray_query.

  [ Bill Hollings ]
  * Per spec, support undefined behavior for out-of-bounds swizzles.

  [ 丛越 ]
  * Fix all requested changes, test_shaders.py supports compiling MSL 2.4 shaders, and the Intersection Query currently only supports MSL 2.4 on the iOS platform.
  * Fix unsupported exceptions for ConvertUToAccelerationStructure & BindingTableRecordOffset.

  [ Hans-Kristian Arntzen ]
  * MSL: Fix some trivial bugs not caught by CI when adding ray query.
  * MSL: Remove some redundant breaks.
  * MSL: Never used templated array for RayQuery objects.

  [ Bill Hollings ]
  * MSL: Support more usecases for unpacked vectors.

  [ Taylor Holliday ]
  * Add Package.swift.

  [ Erfan Ahmadi ]
  * SPIRV-Cross contribution needed for `INTEL_fragment_shader_ordering`

  [ Hans-Kristian Arntzen ]
  * MSL: Workaround compiler crashes when using threadgroup bool.

  [ Bill Hollings ]
  * MSL: Fix type redirection when struct members are reordered to align with offsets.
  * MSL: Remove over-zealous check for struct packing compatibility.

  [ Hans-Kristian Arntzen ]
  * Always use https protocol when cloning external test deps.

  [ Bill Hollings ]
  * MSL: Correctly emit user(clip/cullN) for clip/cull builtins in tess output struct.

  [ Edvin Pettersson ]
  * Fixed potential compilation error in spirv_cross_containers.hpp

  [ Hans-Kristian Arntzen ]
  * Correctly reflect declared buffer size for out of order members.
  * Handle Modf/Frexp in more cases.
  * MSL: Handle non-thread storage class in Modf/Frexp pointer versions.
  * CFG: Handle degenerate selection constructs.
  * GLSL: Deal with buffer_reference_align.

  [ Bill Hollings ]
  * Separate (partially) the tracking of depth images from depth compare ops.

 -- John Zupin <john@odin>  Tue, 16 Nov 2021 16:15:46 -0700

spirv-cross (2021.01.15+200~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Bill Hollings ]
  * MSL: Padding for Metal argument buffers should not double-count SampledImages.

  [ Lukas Taparauskas ]
  * MSL: Fix '--msl-multi-patch-workgroup' out of bounds reads when dispatching more threads than control points (#1662)

  [ Przemog1 ]
  * Fixed 16 bit int types

  [ Hans-Kristian Arntzen ]
  * Update reference output.
  * Honor NoContraction qualifier.
  * HLSL: Implement invariant as precise.
  * MSL: Handle array of IO variable with Component decoration.
  * MSL: Handle array with component when we cannot rely on user() attrib.
  * GLSL: Implement noncoherent framebuffer fetch.
  * MSL: Improve handling of split tessellation access chains.
  * MSL: Add CLI option for sampler suffix.

  [ okuoku ]
  * Fix C sample code in README.md

  [ xndcn ]
  * Add comment after inf/nan float number for clarifying.

  [ Hans-Kristian Arntzen ]
  * MSL: Always enable support for base vertex/index on iOS.
  * Handle odd type for textureGather component.
  * GLSL: Implement control flow hints.
  * Ensure loop control flow hints only appear above loops.

  [ Corentin Wallez ]
  * Fix IVariant -Wdeprecated-copy-with-dtor

  [ Hans-Kristian Arntzen ]
  * Handle SPIR-V 1.4 selection constructs.
  * GLSL: Emit num_views for OVR_multiview2.
  * HLSL: Rewrite how block IO is emitted.

  [ Jon Leech ]
  * Add missing copyright headers.
  * Finish adding SPDX tags and setup a reuse checked in Github Actions CI
  * Actually checkout repo into new reuse job
  * .gitignore ignored new license text

  [ Hans-Kristian Arntzen ]
  * Add GLSL.std.450.h to REUSE.
  * GLSL: Support pervertexNV in NV barycentric extension.

  [ Peter Kasting ]
  * Fix -Wunreachable-code-aggressive.

  [ SpaceIm ]
  * fix cross-build to iOS/tvOS/watchOS

  [ Bill Hollings ]
  * MSL: Fix setting SPIRVCrossDecorationInterpolantComponentExpr decoration.

  [ Hans-Kristian Arntzen ]
  * MSL: Add test for scalar access chain pull interpolant.

  [ Bill Hollings ]
  * MSL: Adjust gl_SampleMaskIn for sample-shading and/or fixed sample mask.

  [ Hans-Kristian Arntzen ]
  * Remove EXPERIMENTAL from JSON reflection backend.
  * MSL: Remove redundant path for SampleMask.
  * GLSL: Implement GL_EXT_ray_query.
  * GLSL: Ensure ray query object decls are flushed if allocated in Function.

  [ Chip Davis ]
  * MSL: Simplify spvSubgroupBallot().

  [ Hans-Kristian Arntzen ]
  * GLSL: Emit precise for fp16/fp64 types as well.
  * Handle value access in terminators.

  [ Bill Hollings ]
  * MSL: Support row-major transpose when storing matrix from constant RHS matrix.
  * MSL: Fix casting in constant expressions with different sizes.
  * MSL: Fix duplicate gl_Position outputs when gl_Position defined but unused.
  * MSL: Add test for fixes to MSL constant expression type down-casting.

  [ Hans-Kristian Arntzen ]
  * Track temporary access for OpArrayLength result.
  * MSL: Consider that function/private variables can be block-like.

  [ John Zupin ]
  * packaging: rebase and update patches

 -- John Zupin <john@odin>  Fri, 27 Aug 2021 15:35:27 -0600

spirv-cross (2021.01.15+124~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Hans-Kristian Arntzen ]
  * MSL: Deal with pointer-to-pointer qualifier ordering.
  * Throw if SPIR-V module has no entry points.
  * GLSL: Add support for Logical subgroup ops.
  * HLSL: Support logical subgroup ops.
  * MSL: Add test for logical subgroup arith ops.
  * Handle edge cases in OpCopyMemory.
  * GLSL: Handle complex load/store scenarios to gl_SampleMask.
  * Add GitHub Actions script.
  * Use Github actions CI tag.

  [ John Zupin ]
  * packaging: update debian/copyright file

  [ Mehmet Oguz Derin ]
  * MSL: Support long ulong types in buffers in 2.3+.
  * Move condition to default block

  [ Hans-Kristian Arntzen ]
  * Fix Github CI in PRs.

  [ Bill Hollings ]
  * MSL: Support padding Metal argument buffer entries based on argument index.

  [ lukas.taparauskas ]
  * c: Add missing API to query active builtins.
  * c: Remove SPVC_PUBLIC_API prefix from API implementation

  [ Bill Hollings ]
  * MSL: Fixes to support padding Metal argument buffer entries based on argument index.
  * MSL: Fixes to support padding Metal argument buffer entries based on argument index.
  * MSL: Fixes to support padding Metal argument buffer entries based on argument index.
  * MSL: Fixes to support padding Metal argument buffer entries based on argument index.

  [ Hans-Kristian Arntzen ]
  * MSVC: Add /bigobj for debug builds.
  * MSL: Sort builtin IO block members by builtin type.
  * Clean up member sorting.
  * MSL: Sketch out API to aid LTO-style optimization.
  * MSL: Correctly emit array type for masked outputs.
  * Add --mask-stage-output-* CLI options.
  * MSL: Do not redirect tess access chains on masked outputs.
  * MSL: Emit threadgroup storage class for masked control point outputs.
  * MSL: Handle effective storage for masked CP outputs.
  * MSL: Do not consider effective storage for any composite.
  * MSL: Add tests for vertex output masking.
  * MSL: Force builtin arrays for builtin array types.
  * MSL: Handle masked outputs in extract_global_variables.
  * MSL: Don't emit weird reference type for spvUnsafeArray types.
  * MSL: Emit correct address space for masked arguments.
  * MSL: Remove position mask tests. They will fail compilation.
  * MSL: Add tests for masking with --for-tess.
  * MSL: Refactor out variable/block member masking.
  * MSL: Fix masking of vertex block outputs.
  * MSL: Explicitly only consider masked variables to be thread-group-like.
  * MSL: Test that we can mask location writes in TESC.
  * MSL: Always emit block variable for block types.
  * MSL: Small refactors.
  * MSL: Temporarily allow empty output struct.
  * MSL: Fix argument_decl check for builtin.
  * MSL: Do not perform scalar fixups for control-point outputs.
  * MSL: Emit a masked builtin IO block if necessary.
  * MSL: Handle masking of builtin control points.
  * MSL: Do not declare patch variables on stack.
  * MSL: Handle flattening of patch block outputs as well.
  * MSL: Rewrite how IO blocks are emitted in multi-patch mode.
  * MSL: Add test for complex control point outputs.
  * MSL: Fixup gl_PerVertex names if we're emitting masked builtins.
  * MSL: Handle masking of TESC IO block members.
  * MSL: Cleanup fallback IO block emission.
  * C: Add C api for stage output masking.
  * MSL: Don't report fallback location allocations as being "used".
  * Fix print_help comment.
  * MSL: Fix initialization of masked threadgroup variables.
  * MSL: Unroll initializations of CullDistance/ClipDistance control points.
  * MSL: Emit multiple threadgroup slices for multi-patch.
  * MSL: Handle CullDistance better.
  * MSL: Test that we can capture cull distance to buffer.
  * MSL: Correctly analyze if builtin block is active.
  * MSL: Handle loading Clip/CullDistance in TESE.
  * MSL: Hoist out to_tesc_invocation_id() in more places.
  * MSL: Use spvUnsafeArray for builtin arrays after all.
  * MSL: Make builtin argument type declaration context sensitive.
  * Check SPIR-V 1.4 rules when reflecting resources.
  * Support reflecting builtins.
  * c: Add C API for builtin stage IO reflection.
  * MSL: Don't emit native array for masked clip/cull distance.
  * MSL: Don't use native arrays for tess level inputs.
  * MSL: Fix copy of arrays to/from stage IO variables.
  * HLSL: Fix automatic location assignment in block IO.
  * MSL: Handle variable access in OpSelect.
  * GLSL: Support GL_EXT_shader_image_load_formatted.
  * GLSL: Implement gl_FragFullyCoveredNV.
  * GLSL: Support shading rate builtins.
  * Rewrite how non-uniform qualifiers are handled.
  * HLSL: Support Shuffle wave ops.
  * MSL: Use proper array for quad tess levels.

 -- John Zupin <john@odin>  Tue, 27 Apr 2021 13:33:34 -0600

spirv-cross (2021.01.15+25~rc2-1lunarg20.04-1) focal; urgency=medium

  * packaging: updated LunarG's copyrights

 -- John Zupin <john@odin>  Thu, 25 Feb 2021 13:53:26 -0700

spirv-cross (2021.01.15+25~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Hans-Kristian Arntzen ]
  * GLSL/HLSL: Disallow VariablePointers capability outright.
  * GLSL: Emit nonuniformEXT in correct place for late-combined samplers.
  * GLSL: Fix KHR subgroup extension table for subgroups.
  * MSL: Handle reserved identifiers for entry point.
  * Handle reserved identifiers for functions.
  * CMake: Disable compiler extensions explicitly.
  * Handle output IO block initializers more robustly.
  * More robust handling of initialized output builtin variables.
  * Minor redundant nit.
  * GLSL: Handle some extreme edge cases in Output variable initialization.
  * GLSL: Add test for initializing tess level output.
  * GLSL: Refactor out Output variable initialization.
  * MSL: Handle initializers for tess levels.
  * MSL: Emit correct initializer for tessellation control points.
  * MSL: Don't flatten builtin arrays unless they're part of IO interface.
  * MSL: Fix initializer for tess level outputs.
  * CLI: Add stdin support.
  * GLSL: Update SPIR-V headers for modified ray tracing opcodes.
  * GLSL: Fix -Wshadow error.
  * MSL: Very slight refactor.
  * MSL: Only consider builtin variables if they are part of IO interface.
  * MSL: Always enable Outputs in vertex stages.
  * MSL: Make sure initialized output builtins are considered active.
  * GLSL: Force block declaration if clip/cull is used in tesc.
  * Add test for pure initializer gl_FragDepth.
  * MSL: Always use input_attachment_index for framebuffer fetch binding.
  * MSL: Fix various bugs with framebuffer fetch on macOS and argument buffers.
  * Roll dependencies.
  * CLI: Fix silly regression with handling of -V.
  * GLSL: Support both SPV_KHR_ray_tracing and NV_ray_tracing.
  * Fix pathological complexity explosion for certain shaders.
  * meta: Update copyright headers to 2021.
  * GLSL: Handle tracing against incoming payload/callable.
  * Deal better with CompositeExtract from constant composite.
  * Handle nonuniformEXT qualifier for acceleration structures.
  * Check entry point variables in is_hidden_variables.

  [ Bill Hollings ]
  * Expose position invariance.

  [ Hans-Kristian Arntzen ]
  * HLSL: Add vector to illegal names list.
  * c: Add missing IOS_SUPPORT_BASE_VERTEX_INSTANCE option.
  * MSL: Always return [[position]] when required.
  * MSL: Fixup type when using tessellation levels in TESC functions.

  [ Peng Huang ]
  * Fix build errors on Windows

  [ Hans-Kristian Arntzen ]
  * Add comment where aux image atomic buffers are reflected from.
  * MSL: Refactor out location consumption count computation.
  * MSL: Gracefully assign automatic input locations to builtin attributes.
  * MSL: Handle load and store to TessLevel array in TESC.

  [ Peng Huang ]
  * Add two missing source files

 -- John Zupin <john@odin>  Mon, 22 Feb 2021 15:29:00 -0700

spirv-cross (2020.09.17+122-1lunarg20.04-1) focal; urgency=medium

  [ Hans-Kristian Arntzen ]
  * GLSL: Use literal array size for cull/clip array sizes.
  * GLSL: Add support for transform_feedback3 geometry streams.

  [ criss ]
  * Resolved issues 1350, 1351, 1352

  [ Hans-Kristian Arntzen ]
  * Update GL subgroup test file.
  * Add missing VK variant of the test file.
  * Style nits for GL subgroup implementation.

  [ Chip Davis ]
  * MSL: Support SPV_EXT_demote_to_helper_invocation for MSL 2.3.
  * MSL: Support atomic access to images from argument buffers.
  * MSL: Add missing interlock handling to atomic image buffers.
  * MSL: Fix calculation of atomic image buffer address.

  [ Hans-Kristian Arntzen ]
  * MSL: Support querying and modifying generated combined sampler suffix.
  * GLSL: Use need_transpose when checking for non-native matrix.

  [ Chip Davis ]
  * MSL: Don't use a bitcast for tessellation levels in tesc shaders.
  * MSL: Handle Offset and Grad operands for 1D-as-2D textures.
  * MSL: Don't remove periods from swizzle buffer index exprs.
  * MSL: Correct definitions of subgroup ballot mask variables.
  * MSL: Support vectors with OpGroupNonUniformAllEqual.
  * MSL: Mask ballots passed to Ballot bit ops.
  * MSL: Cast broadcast booleans to ushort.

  [ Hans-Kristian Arntzen ]
  * Update TravisCI python reference.
  * MSL: Do not use component::x gather for depth2d textures.

  [ Chip Davis ]
  * MSL: For 2.1+, don't disable rasterization for vertex writes.

  [ Hans-Kristian Arntzen ]
  * GLSL: Support a workaround for loading row-major matrices.
  * Handle case where block is loop header, continue AND break block.

  [ Chip Davis ]
  * MSL: Allow post-depth coverage on Mac in MSL 2.3.
  * MSL: Allow framebuffer fetch on Mac in MSL 2.3.

  [ Bill Hollings ]
  * MSL: Support run-time sized image and sampler arrays (GL_EXT_nonuniform_qualifier/SPV_EXT_descriptor_indexing).

  [ Yuwen Wu ]
  * added metal keyworld: "level" (#1501)

  [ atyuwen ]
  * fixed compile error with -std=c++20

  [ Hans-Kristian Arntzen ]
  * GLSL: Fix nonuniformEXT injection.

  [ Chip Davis ]
  * MSL: Allow Bias and Grad arguments with comparison on Mac in MSL 2.3.

  [ Bill Hollings ]
  * Minor format and typo updates from code review.

  [ devsh ]
  * Fix some bad assumptions about emulating `subgroupBarrier`

  [ criss ]
  * Updated ref file for subgroups_basicvoteballot.vk.comp

  [ Bill Hollings ]
  * Syntax and format updates from code review.

  [ Hans-Kristian Arntzen ]
  * Parser: Don't assume OpTypePointer will always take a SPIRType.
  * HLSL: Add option to flatten matrix vertex input semantics.

  [ rdb ]
  * HLSL: Support depth comparison texture sampling in SM 2/3.
  * HLSL: Add regression test for SM3.0 texture samplers
  * HLSL: Support roundEven() in HLSL SM 4.0 and above

  [ Chip Davis ]
  * MSL: Support pull-model interpolation on MSL 2.3+.

  [ Hans-Kristian Arntzen ]
  * MSL: Fix regression in image gather handling.

  [ rdb ]
  * GLSL: Fix support for textureLod in legacy vertex shaders
  * GLSL: Fix round/roundEven for legacy GLSL.
  * GLSL: implement transpose() in GLSL 1.10 / ES 1.00
  * GLSL: Remove unused `lod` argument from legacy_tex_op()
  * GLSL: Add error checking and extension fallback for textureGather

  [ Hans-Kristian Arntzen ]
  * Update texture gather test result.
  * Run format_all.sh.

  [ Jan Sikorski ]
  * MSL: extract global variables from subgroup ballot operations

  [ rdb ]
  * GLSL: Legacy / extension fallbacks for textureSize and texelFetch

  [ Hans-Kristian Arntzen ]
  * Fix switch fallthrough
  * MSL: Add missing reference file.

  [ Chip Davis ]
  * MSL: Expose some more features on iOS.

  [ rdb ]
  * GLSL: Require GL_ARB_vertex_attrib_64bit for double input in pre-4.10

  [ Chip Davis ]
  * MSL: Expand subgroup support.

  [ scribam ]
  * CMake: Set minimum required version to 3.0

  [ Hans-Kristian Arntzen ]
  * Normalize all internal workaround methods to use spv prefix.
  * HLSL: Fix validation with FXC for test.
  * GLSL: Emit storage qualifiers for buffer_reference.
  * GLSL: Fix buffer_reference with aliased names.

  [ Chip Davis ]
  * MSL: Adjust FragCoord for sample-rate shading.
  * MSL: Don't mask off inactive bits in ballot masks.

  [ comex ]
  * spirv_msl: Don't add fixup hooks for builtin variables if they're unused.
  * msl: Don't try to use [[thread_index_in_simdgroup]] in vertex shaders.

  [ Jan Sikorski ]
  * MSL: Added fmin3 and fmax3 library functions to the illegal name list.

  [ Hans-Kristian Arntzen ]
  * Add MIT dual license for the SPIRV-Cross API.

  [ John Zupin ]
  * packaging: update copyright

 -- John Zupin <john@odin>  Tue, 08 Dec 2020 10:31:39 -0700

spirv-cross (2020.09.17+6-1lunarg20.04-1) focal; urgency=medium

  [ Tomek Ponitka ]
  * Adding BuiltInSampleMask in HLSL

  [ Hans-Kristian Arntzen ]
  * GLSL: Add option to force flattening IO blocks.
  * Only rewrite type aliases for the base type.
  * GLSL: Be more aggressive about using type_alias.
  * Ensure that we use primary alias type when emitting flattened members.
  * Add some test cases for complex type aliasing scenario.

  [ John Zupin ]
  * debian: remove README.Debian

  [ Chip Davis ]
  * MSL: Fix handling of matrices and structs in the output control point array.

  [ Le Hoang Quyen ]
  * Fix #1445: MSL: Enclose args when convert distance(a,b) to abs(a-b)

  [ Hans-Kristian Arntzen ]
  * HLSL: Fix bug in is_packing_standard for cbuffer.
  * HLSL: Deal with partially filled 16-byte word in cbuffers.
  * HLSL: Fix FragCoord.w.
  * Overhaul how we deal with reserved identifiers.
  * Work around annoying warning on GCC 10.2.
  * Run format_all.sh.

  [ Chip Davis ]
  * MSL: Fix multiview view index calculation with a non-zero base instance.
  * MSL: Don't set the layer for multiview if the device doesn't support it.

  [ Hans-Kristian Arntzen ]
  * MSL: Fix OpCompositeInsert and OpVectorInsertDynamic.

  [ Chip Davis ]
  * MSL: Support layered input attachments.

  [ Hans-Kristian Arntzen ]
  * Handle OpUndef %void.
  * Roll glslang/SPIRV-Tools deps.

  [ Corentin Wallez ]
  * Fix -Wduplicate-enum and -Wrange-for-analysis.

  [ Hans-Kristian Arntzen ]
  * Implement a simple evaluator of specialization constants.
  * Deal with case where a selection construct conditionally merges/breaks.
  * Clean up conditional branch codegen.

  [ dan sinclair ]
  * Roll dependencies.

  [ Hans-Kristian Arntzen ]
  * Allow flip_vert_y in all relevant stages.
  * Work around MSVC warning.

 -- John Zupin <john@odin>  Mon, 28 Sep 2020 16:57:04 -0600

spirv-cross (2020.06.29+27-1ubuntu20.04-3) focal; urgency=medium

  * install: update to add so.0 to dev

 -- John Zupin <john@odin>  Wed, 29 Jul 2020 15:42:52 -0600

spirv-cross (2020.06.29+27-1ubuntu20.04-2) focal; urgency=medium

  * control: breaks/replaces because of fix
  * install: install the .so in the dev package

 -- John Zupin <john@odin>  Wed, 29 Jul 2020 15:07:43 -0600

spirv-cross (2020.06.29+27-1lunarg20.04-1) focal; urgency=medium

  [ Hans-Kristian Arntzen ]
  * HLSL: Add native support for 16-bit types.
  * MSL: Remove obsolete MSLVertexAttr members.
  * GLSL: Implement sparse feedback.

  [ Alexander Meißner ]
  * Fix missing switch cases in Y'CbCr conversion

  [ Hans-Kristian Arntzen ]
  * Refactor texture fetch function generation.
  * GLSL: Support uint code for sparse residency query.
  * GLSL: Handle the rest of GL_ARB_sparse_texture_clamp.

  [ rdb ]
  * GLSL: Require GL_ARB_draw_instanced for gl_InstanceID in GLSL < 1.40

  [ Hans-Kristian Arntzen ]
  * HLSL: Fix texProj in legacy HLSL.

  [ Chip Davis ]
  * MSL: Fix up input variables' vector lengths in all stages.

  [ Hans-Kristian Arntzen ]
  * Remove unused member in MSLShaderInput.
  * Clean up some deprecation warnings when building with Makefile.
  * MSL: Improve handling of array types in buffer objects.
  * MSL: Add tests for array copies in and out of buffers.
  * MSL: Deal with loading non-value-type arrays.
  * MSL: Add test case for constructing struct with non-value-type array.
  * Fix duplicated initialization for loop variables with initializers.

  [ Corentin Wallez ]
  * Fix placement of SPIRV_CROSS_DEPRECATED.

  [ Hans-Kristian Arntzen ]
  * MSL: Remove the old VertexAttr API.

  [ dan sinclair ]
  * Roll deps and update tests.

  [ Hans-Kristian Arntzen ]
  * HLSL: Workaround FXC bugs with degenerate switch blocks.

  [ John Zupin ]
  * patch: remove the root makefile so we can use cmake
  * packages: remove backup files
  * package: add spirv-cross-dev package

  [ Hans-Kristian Arntzen ]
  * Fix bug with control dependent expression tracking.
  * Implement context-sensitive expression read tracking.
  * GLSL: Use for-loop fallback instead of do/while for legacy ESSL.
  * GLSL: Implement switch on ESSL 1.0.
  * GLSL: Fix nested legacy switch workarounds.
  * test: Use --hlsl-dx9-compatible when attempting to compile SM 3.0 shaders.
  * Run format_all.sh.
  * GLSL: Support multi-level struct flattening for I/O.
  * GLSL: Support I/O flattening with arrays as final type.
  * MSL: Use input attachment index directly for resource index fallback.
  * MSL: Workaround broken vector -> scalar access chain in MSL.
  * MSL: Do not emit swizzled writes in packing fixups.

  [ dan sinclair ]
  * Roll deps.

  [ Thomas Roughton ]
  * MSL: Ensure OpStore source operands are marked for inclusion in function arguments

  [ Hans-Kristian Arntzen ]
  * Merging with 2020-06-29 tag for testing

  [ John Zupin ]
  * update patch to fix Makefile

  [ Hans-Kristian Arntzen ]
  * MSVC 2013: Fix silently broken builds.

  [ John Zupin ]
  * copyright: update for release

  [ Chip Davis ]
  * MSL: Factor a really gnarly condition into its own method.
  * MSL: Factor creating a uint type into its own method.

  [ dan sinclair ]
  * Roll GLSLang, SPIRV-Headers and SPIRV-Tools.

  [ Chip Davis ]
  * MSL: Add support for processing more than one patch per workgroup.

  [ Tomek Ponitka ]
  * Enabling setting a fixed sampleMask in Metal fragment shaders.

  [ John Zupin ]
  * copyright: updated for lunarg debian files

 -- John Zupin <john@odin>  Mon, 27 Jul 2020 15:02:04 -0600

spirv-cross (2020.5.19+18-1) bionic; urgency=medium

  * Initial release

 -- John Zupin <john@unknown>  Tue, 23 Jun 2020 14:23:20 -0600
