spirv-cross (2021.01.15+854~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Evan Tang ]
  * MSL: Prevent RAW hazards on read_write textures
  * MSL: Make rw texture fences optional

  [ Try ]
  * MSL: runtime array over argument buffers

  [ Hans-Kristian Arntzen ]
  * MSL: Fixup nits from review.
  * GLSL: Require mesh shader when using perprimitiveEXT in frag shader.
  * GLSL: Implement 64-bit image support.
  * GLSL: Emit inline invariant position for mesh shaders.
  * GLSL: Fix Clip/Cull in mesh shaders.

  [ Hitesh A. Bosamiya ]
  * [SC-2189] Compiler::get_shader_resources() does not return all uniforms

  [ Hans-Kristian Arntzen ]
  * MSL: Workaround bizarre crash on macOS.

  [ Try ]
  * check for SPVFuncImplVariableSizedDescriptor
  * MSL: fix mutability for rayQueryEXT parameters
  * fix extraction of global variables, in case of atomics
  * Fix unroll, when storing to pointer to array

  [ Evan Tang ]
  * Cache externals in GitHub Actions
  * Parallelize Github Actions builds

  [ Laura Hermanns ]
  * Add Natvis file with debug information for VectorView and SmallVector.

  [ Hans-Kristian Arntzen ]
  * MSL: Use powr instead of pow.
  * HLSL: Add missing reference output file.
  * GLSL: Handle empty block declarations.
  * GLSL: Ignore bogus constant/undefs which use block types.
  * GLSL: Use buffer_reference2 instead of 1.
  * Fix stray namespace issue.

  [ Bill Hollings ]
  * MSL: Workaround Metal 3.1 regression bug on recursive input structs.

  [ Hans-Kristian Arntzen ]
  * Fixup stray comments in test_shaders.sh.
  * Style fixups.

  [ Laura Hermanns ]
  * Fix declaration of gl_SampleMaskIn[1] in HLSL backend.

  [ Hans-Kristian Arntzen ]
  * HLSL: Declare sample mask array with proper module type.
  * Add test for sample mask bulk load/store.
  * MSL: Improve handling of sample masks.

  [ Bill Hollings ]
  * MSL: Fix regression error in argument buffer runtime arrays.

  [ Eliza Velasquez ]
  * Workaround for generating bool uniforms in ESSL1

  [ Hans-Kristian Arntzen ]
  * Review nit, update brace placement
  * Only use lowp path for legacy ES

  [ chirsz-ever ]
  * Add "build" to .gitignore
  * Allow to customize float literals in output

  [ Hans-Kristian Arntzen ]
  * Apply suggestions from code review
  * Apply suggestions from code review
  * MSL: Add divide to reserved function names.
  * MSL: Support std140 half matrices and arrays.
  * MSL: Use more appropriate padded types.
  * MSL: Don't use swizzle if we have wrapper.
  * MSL: Move test files to packing/.

  [ Chip Davis ]
  * MSL: Work around broken cube texture gradients on Apple Silicon.
  * Add missing new MSL options to the C API and the CLI.

  [ Hans-Kristian Arntzen ]
  * MSL: Implement Metal 3.1 image atomics natively.
  * MSL: Update test scripts for MSL 3.1 testing.
  * MSL: Add some image atomic tests for 3.1.
  * MSL: Support using the offline Metal Windows toolchain for validation.
  * MSL: Throw on emulated image array atomics.

  [ Hugo Devillers ]
  * Added an Op field to SPIRType
  * fix a bunch of case where SPIRType::op is wrong/corrupted
  * msl: fix test regressions with samplemask
  * msl: fix two more instances of the wrong op in SPIRType
  * msl: fix many instances of SPIRType.self being incorrectly set
  * msl: make build_extended_vector_type deal with compound types better
  * msl: look at the actual variable element type in to_member_reference
  * msl: look at the pointee type in emit_tessellation_access_chain
  * use 'op' as the ground truth in is_array and is_pointer

  [ Chip Davis ]
  * MSL: Fix patch vertex count with raw buffer tese input.

  [ Try ]
  * MSL: add ray-cull mask
  * + missing tests

  [ Hans-Kristian Arntzen ]
  * MSL: Consider PtrAccessChain on array types.
  * MSL: Use LHS expression to determine whether or not to do array copy.
  * MSL: Only do address-of expression when needed.
  * MSL: Defererence pointer expressions before traversing access chain.
  * MSL: Add test for vector-to-scalar variable pointer.
  * MSL: Wrap dereferenced ptr-chain expressions.

  [ Hugo Devillers ]
  * fix unintialised struct in SPIRType
  * fix more spirtype::op instances

  [ Hans-Kristian Arntzen ]
  * Various nit fixes and improvements from review.
  * MSL: Remove special case for threadgroup array wrapper.

  [ Bill Hollings ]
  * MSL: Ensure discrete runtime arrays of buffers have known length.

  [ Hans-Kristian Arntzen ]
  * Roll deps.
  * HLSL: Fix issue with vec4 straddle rules in substructs.

 -- john <john@odin>  Tue, 09 Jan 2024 11:15:49 -0700

spirv-cross (2021.01.15+741~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Evan Tang ]
  * MSL: Fix dref lod workaround on combined texture/samplers

  [ Laura Hermanns ]
  * HLSL: Add support to preserve (RW)StructuredBuffer resources.
  * Added tests for HLSL structured buffers.

  [ Hans-Kristian Arntzen ]
  * HLSL: Add CLI option for --hlsl-preserve-structured-buffers.
  * Update test output for preserve structured.

  [ Tibor Klajnscek ]
  * added get_required_extensions() API to GLSL compiler

  [ rcombs ]
  * MSL: fix function constant deduplication misfire

  [ Stephen Hutchinson ]
  * Add pkg-config file for static builds
  * CMakeLists/pkgconfig: use a single version definition

  [ Hans-Kristian Arntzen ]
  * Apply suggestions from code review
  * Workaround MSVC jank
  * MSL: Consider bool/short remapping when dealing with composites.
  * MSL: Handle stores to struct bool[].
  * MSL: Handle more complex array copy scenarios with bool <-> short.
  * MSL: Add test for bool-in-struct edge cases.
  * spirv-cross-c: Bump minor version.
  * Small cleanup after merge.
  * Minor cleanup in constant_expression().
  * MSL: Consider bool-short remapping for constant expressions as well.
  * MSL: Consider changed array types for array-of-constant-bool in struct.
  * C-api: Fix warning.
  * GLSL: Fix bug with mixed precision on PHI variables.
  * Skip line directives when emitting loop condition blocks.

  [ Try ]
  * meshlet flip-y support
  * flip-y-test

  [ Chip Davis ]
  * Use --preserve-numeric-ids when assembling test shaders.
  * MSL: Support `SPV_KHR_shader_ballot` and `SPV_KHR_subgroup_vote`.

  [ Hans-Kristian Arntzen ]
  * Apply suggestions from code review
  * HLSL: Add explicit error for floating point atomics.

  [ Try ]
  * track access to meshlet position.y, via SPIRExpression

  [ Hans-Kristian Arntzen ]
  * HLSL: Move new mesh shader around to more suitable location.
  * Consider plain Position builtin variable as well.
  * Consider dynamically indexed gl_Position in mesh.
  * Add test for plain variable mesh position.

  [ Try ]
  * + spvMakeIntersectionParams
  * update rq unit tests
  * update rq unit tests

  [ Bill Hollings ]
  * Fix argument buffer padding when content includes arrays.

 -- john <john@odin>  Tue, 15 Aug 2023 14:45:48 -0600

spirv-cross (2021.01.15+740~rc1-1lunarg20.04-1) focal; urgency=medium

  [ skkkksdkfak ]
  * Fix argument for CommitProceduralPrimitiveHit.

  [ Skye ]
  * Implement setscalar fns for all getscalar fns
  * bumped version, corrected function signatures

  [ Try ]
  * task shader initial
  * code-style

  [ Gulfem Savrun Yeniceri ]
  * Add missing <exception> include

  [ Hans-Kristian Arntzen ]
  * HLSL: Update rayquery reference.

  [ Try ]
  * virtual emit_mesh_tasks
  * cleanup

  [ John Wells ]
  * Fix for argument buffer index compare when invalid
  * Fix for typo in help

  [ Skye ]
  * update f32 to u32

  [ John Wells ]
  * Add code braces
  * Make argument buffer padding testable
  * Revert "Make argument buffer padding testable"

  [ Hans-Kristian Arntzen ]
  * GLSL: Fix expression reorder bug with legacy FMA fallback.
  * MSL: Do not override variable name late.
  * HLSL: Add missing test reference.
  * MSL: Add test for block IO output with function use.

  [ georgeouzou ]
  * GLSL: Support KHR_subgroup_arithmetic IAdd
  * GLSL: Support KHR_subgroup_arithmetic FAdd
  * GLSL: Checking for inactive threads in non uniform arithmetic ops
  * GLSL: Support KHR_subgroup_arithmetic IMul/FMul

  [ 手机用户Xh2vb13n ]
  * HLSL: support Texture2D::GatherCmp function

  [ Hans-Kristian Arntzen ]
  * MSL: Use name_id consistently in argument declaration.

  [ Laura Hermanns ]
  * GLSL: Use actual field offset to validate vec4 boundary alignment.
  * HLSL: Don't restrict SV_RenderTargetArrayIndex to GS and MS.

  [ Hans-Kristian Arntzen ]
  * Update Ubuntu CI versions.
  * HLSL: Add test for straddling + holes in struct.

  [ George Ouzounoudis ]
  * GLSL: Address review comments
  * GLSL: Add tests for subgroup iadd, fadd, imul, fmul

  [ Hans-Kristian Arntzen ]
  * GLSL: Disambiguate pointer vs array properly in packed_size/alignment.
  * MSL: Don't hit array copy path for pointer to array.
  * MSL: Use templated array type when emitting BDA to arrays.
  * Be more precise in usage of pointer/array mixing.

  [ Trass3r ]
  * upload binaries as artifacts (#2144)

 -- john <john@odin>  Tue, 23 May 2023 11:28:57 -0600

spirv-cross (2021.01.15+688~rc1-1lunarg20.04-1) focal; urgency=medium

  [ rdb ]
  * HLSL: Support PointSize output in vertex shader in SM 3.0

  [ warmenhoven ]
  * Win10 doesn't like std::max

  [ Chip Davis ]
  * MSL: Use `rint()` instead of `round()` to round array coordinates.

  [ Lachlan Deakin ]
  * GLSL: Support OpReadClockKHR

  [ rdb ]
  * Add early exit for test_shaders if compilation fails

  [ Hans-Kristian Arntzen ]
  * MSL: Fix potentially uninitialized warning.
  * MSL: Fix another warning on potentially uninitialized.

  [ libretroadmin ]
  * (spirv_glsl.cpp) Fix error: no matching function for call to 'max(uint32_t&, unsigned int)'

  [ rdb ]
  * GLSL: Multiplying matrix with scalar shouldn't force transpose
  * GLSL: Add various additional extension checks.
  * GLSL: Allow sample inputs in desktop < 400 with GL_ARB_sample_shading

  [ Hans-Kristian Arntzen ]
  * GLSL: Minor fixes for shader clock implementation.

  [ rdb ]
  * GLSL: Add support for modf, isnan and isinf in legacy GLSL
  * GLSL/HLSL: Add emulated fallbacks for sinh/cosh/tanh/asinh/acosh/atanh
  * GLSL: Drop invariant keyword in GLSL 110
  * GLSL: Legacy matrix inverse/determinant polyfills, outerProduct()
  * GLSL: Fix missing precision qualifier in spvDeterminant return value

  [ Ravbug ]
  * Check for SM < 6.7

  [ Chip Davis ]
  * MSL: Add a workaround for broken `level()` arguments.

  [ Randall C. O'Reilly ]
  * add support for OpAtomicFAddEXT atomic add on float types, now avail in metal 3.0
  * add OpAtomicFMinEXT and Max as well, while we're at it -- I didn't test those but presumably work the same.
  * revert FMinEXT, FMaxExt
  * added tests and added msl3 to test_shaders.py

  [ Chip Davis ]
  * MSL: Deduplicate function constants.

  [ Randall C. O'Reilly ]
  * update msl_compiler_supports_version to work with metal 3.0
  * cleaner version check

  [ Laura Hermanns ]
  * GLSL: Don't create temporaries for sampled image types in GLSL.

  [ Nathan Gauër ]
  * adds Khronos license to LICENSES folder.
  * try adding SPDX notice
  * applying pr feedback
  * revert trailing space fix

 -- john <john@odin>  Wed, 22 Mar 2023 09:44:37 -0600

spirv-cross (2021.01.15+588~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Hans-Kristian Arntzen ]
  * Add C API option for enable row major workaround.
  * GLSL: Fix row-major workaround wrapper for ES.
  * CFG: Handle implied access to opaque loaded values.

  [ Bill Hollings ]
  * MSL: Add support for writable images in iOS Tier2 argument buffers.

  [ Laura Hermanns ]
  * Fixed typo in CompilerGLSL::should_dereference()

  [ Hans-Kristian Arntzen ]
  * Fix GCC5 build.

  [ Bill Hollings ]
  * Fixes from code review of adding writable images to iOS Tier2 argument buffers.

  [ Loic Sharma ]
  * Accept no ops

  [ Hans-Kristian Arntzen ]
  * Roll dependencies.
  * Add tests for loops compiled with debug semantics.
  * Update test for updated block_is_noop check.
  * Also consider NonSemantic ExtInst in block_is_noop.
  * Refactor PHI checks into block_is_noop instead.
  * GLSL: Declare gl_in/gl_out as array more robustly.
  * GLSL: Handle textureGatherOffsets properly.
  * Updates for main branch rename.

  [ rdb ]
  * GLSL/HLSL: Add legacy handling for int vertex attributes

  [ Hans-Kristian Arntzen ]
  * Fix misc compilation issues with std::max.

  [ rdb ]
  * GLSL: Support GL_NV_shader_noperspective_interpolation in GLES

  [ John Zupin ]
  * packaging: debian: update copyright

 -- john <john@odin>  Mon, 23 Jan 2023 11:50:58 -0700

spirv-cross (2021.01.15+558~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Chip Davis ]
  * MSL: Support "raw" buffer input in tessellation evaluation shaders.
  * MSL: Don't flatten arrayed per-patch output blocks in tessellation shaders.
  * MSL: Account for composite types when assigning locations.

  [ Hans-Kristian Arntzen ]
  * MSL: Handle partial access chains with array-of-UBO/SSBO.
  * HLSL: Add option to bind vertex input smemantics by name.
  * MSL: Fix restrict vs __restrict incompatibility.
  * MSL: Handle implicit integer promotion rules.
  * Roll glslang dependency.

  [ Chip Davis ]
  * MSL: Implement `CompositeInsert` `OpSpecConstantOp`.

  [ Try ]
  * HLSL: Implement VK_EXT_mesh_shader

  [ Hans-Kristian Arntzen ]
  * Fixup glslang reference.
  * HLSL: Add missing reference for mesh shader test.
  * HLSL: Fix-up some style issues from review.
  * HLSL: Fix some warnings from review.
  * HLSL: Some cleanups and fixes in analyze_meshlet_writes.
  * HLSL: Make sure to test deeply nested functions in mesh shaders.
  * HLSL: Handle case where PerVertex block is not used.
  * GLSL: Add test for mesh with non-block builtin IO.
  * HLSL: Do not support ClipCull size > 4 in mesh shaders.
  * HLSL: Fix test for non-block per-primitive IO.
  * Handle ShaderDebugInfo non-semantic extension.

  [ Chip Davis ]
  * MSL: Manually update `BuiltInHelperInvocation` when a fragment is discarded.
  * MSL: Add missing casts to `Op?MulExtended`.
  * MSL: Prevent stores to storage resources in discarded fragments.
  * GLSL, MSL: Handle `OpUndef` as part of a constant composite.
  * Interleave undef values with constants and types.
  * MSL: Don't dereference forwarded copies of `OpVariable` pointers.

  [ Dunfan Lu ]
  * Fix MSL Access Chain

  [ Hans-Kristian Arntzen ]
  * MSL: Refactor member reference in terms of one boolean.

 -- john <john@odin>  Thu, 08 Dec 2022 10:44:27 -0700

spirv-cross (2021.01.15+517~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Yuwen Wu ]
  * Don't rename remapped variables like 'gl_LastFragDepthARM'
  * GLSL: disable row major load around on GLES.
  * Skip remapped vars in 'fixup_reserved_names'
  * GLSL: added an option to disable row-major-load workaround.

  [ Hans-Kristian Arntzen ]
  * Update dependencies.
  * Update SPIR-V headers.
  * Update glslang reference.
  * GLSL: Implement GL_EXT_mesh_shader.
  * GLSL: Implement task shaders.

  [ FrankXie ]
  * Add vcpkg installation instructions

  [ Chip Davis ]
  * MSL: Add a mechanism to fix up shader outputs.

  [ Hans-Kristian Arntzen ]
  * Update glslang/spirv-tools.
  * Update mesh/task test references.

  [ Yuwen Wu ]
  * MSL: only fix up gl_FragCoord if really necessary.

  [ Bill Hollings ]
  * MSL: Support OpPtrEqual, OpPtrNotEqual, and OpPtrDiff.

  [ Aaron Siegel ]
  * GLSL: Account for ES sampler1D to sampler2D promotion in textureSize.

  [ Hans-Kristian Arntzen ]
  * MSL: Handle descriptor aliasing of raw buffer descriptors.
  * MSL: Do not attempt to alias push constants.
  * MSL: Report unsupported 64-bit atomics.
  * MSL: Add more keywords to reserved set.

  [ Bill Hollings ]
  * MSL: Emit correct address space when casting during OpStore.

  [ Hans-Kristian Arntzen ]
  * Add reflection support for shader record buffers.
  * MSL: Expose way to query if a buffer needs array length.
  * HLSL: Improve support for VertexInfo aux struct.

 -- john <john@odin>  Tue, 18 Oct 2022 10:23:29 -0600

spirv-cross (2021.01.15+477~rc1-1lunarg20.04-1) focal; urgency=medium

  [ vkaytsanov ]
  * Fix missing function in README sample

  [ Hans-Kristian Arntzen ]
  * Fix control flow bug where we missed continue;
  * GLSL: Add missing KHR barycentric references.
  * GLSL: Add more extension ladder fallbacks for unusual integer sizes.

  [ Pedro J. Estébanez ]
  * HLSL: Implement bit casts between Half and UShort.

  [ Hans-Kristian Arntzen ]
  * GLSL: Handle forced temporary OpConvertUToAccelerationStructureKHR.

  [ Sergii Penner ]
  * Fix typo

  [ Bill Hollings ]
  * MSL: Add support for SPV_KHR_physical_storage_buffer extension.

  [ Frédéric Wang ]
  * Fix compilation errors with deprecated sprintf function
  * Keep using sprintf on windows.
  * address more review comments

  [ Bill Hollings ]
  * MSL: Fixes from review for SPV_KHR_physical_storage_buffer extension.
  * MSL: Fixes from review for SPV_KHR_physical_storage_buffer extension.
  * MSL: Fix implicit conversion precision build error.

  [ Hans-Kristian Arntzen ]
  * Handle PHI in collapsed switch constructs.
  * HLSL: Add option to emit entry point name 1:1 instead of main().

  [ Pedro J. Estébanez ]
  * HLSL: Implement GroupOperation(Inclusive/Exclusive)Scan.

  [ Hans-Kristian Arntzen ]
  * Avoid detection of false loop variables.
  * Handle collapsed loops similar to collapsed selections.
  * Handle multiple breaks out of switches.

  [ Chip Davis ]
  * MSL: Also replace `bool` with `short` in structures.
  * MSL: Use a wrapper type for matrices in workgroup storage.

  [ Hans-Kristian Arntzen ]
  * Fix minor style nit from review.
  * Do not optimize OpCompositeInsert for hoisted temporaries.
  * MSL: Fix various bugs with Ptr/U bitcasts.

 -- john <john@odin>  Mon, 15 Aug 2022 13:33:29 -0600

spirv-cross (2021.01.15+434~rc1-1lunarg20.04-1) focal; urgency=medium

  [ skksdkfak ]
  * Translate gl_PrimitiveID to SV_PrimitiveID.

  [ Pedro J. Estébanez ]
  * HLSL: Implement ViewIndex.

  [ Hans-Kristian Arntzen ]
  * MSL: Pass down global RayQuery object to leaf functions.
  * GLSL: Support GL_EXT_debug_printf.

  [ Stefan Lienhard ]
  * cli: display missing memory qualifiers for reflect and dump-resources
  * add qualifiers to reference reflect json output
  * remove newline at eof

  [ Bill Hollings ]
  * MSL: Emit interface block members of array length 1 as arrays instead of scalars.

  [ Hans-Kristian Arntzen ]
  * Handle early reads from loop variables with initializers.
  * HLSL: Add more comprehensible reserved identifier list.

  [ Laura Hermanns ]
  * HLSL: Add missing BuiltInLayer to HLSL backend.

  [ Hans-Kristian Arntzen ]
  * GLSL: Clean up some ways of querying decoration flags.
  * GLSL: Handle more proper semantics for RelaxedPrecision.
  * Refactor out query for operation type/result IDs.
  * Add --stage handling for ray tracing.
  * GLSL: Do not analyze precision for Undef variables.
  * MSL: Potentially cast loaded Input variables.
  * GLSL: Don't apply Grad LOD workarounds for fetch.
  * Attempt more optimal codegen for OpCompositeInsert.
  * Add tests for OpCompositeInsert edge cases.
  * Promote Unreachable cases into break to avoid fallthrough.

  [ iwubcode ]
  * HLSL: fix BuiltInLayer to emit semantic 'SV_RenderTargetArrayIndex' instead of 'SV_RenderTargetIndex'

  [ Hans-Kristian Arntzen ]
  * GLSL: Implement 1D texture emulation for ES.
  * GLSL: Add basic support for GL_EXT_shader_atomic_float.
  * Roll dependencies.
  * Emit KHR barycentrics if source enables the KHR extension.

 -- john <john@odin>  Thu, 09 Jun 2022 09:32:32 -0600

spirv-cross (2021.01.15+388~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Rodolphe ]
  * [Spirv_msl] Fix normalize on half3/half2 (#1856)

  [ Hans-Kristian Arntzen ]
  * Update documentation for descriptor set support in MSL/HLSL.
  * GLSL: Ensure correct signed integer type for more texture functions.
  * Do not emit hoisted access chain temporaries unless backend supports it.
  * Fix regression from adding 64-bit switch support.
  * Add debug option to modify maximum number of compile iterations.
  * Add more scenarios where we can guarantee forward progress.

  [ Shintaro Sakahara ]
  * HLSL: Make --flatten-ubo work correctly

  [ xndcn ]
  * MSL: append entry point args to local variable names to avoid conflicts

  [ Alex Brachet ]
  * Qualify move as std::move

  [ Hans-Kristian Arntzen ]
  * MSL: Refactor and fix use of quadgroup vs simdgroup.
  * HLSL: Do not emit VPOS fixup unless position is active.

  [ Daniel Thornburgh ]
  * Qualify std::move.

  [ Bill Hollings ]
  * MSL: Support input/output blocks containing nested struct arrays
  * MSL: Non-functional fixes from PR code review.
  * MSL: Fix var names in test shaders to avoid reserved identifiers.
  * MSL: Document clarification of location incrementing.

  [ Hans-Kristian Arntzen ]
  * Fix formatting nits from review.
  * Handle OpTerminateInvocation.
  * Add relax_nan_checks options.

  [ Pedro J. Estébanez ]
  * HLSL: Add support for gl_HelperInvocation

  [ Hans-Kristian Arntzen ]
  * HLSL: Implement HelperInvocationEXT.
  * HLSL: Add test for HelperInvocation.
  * Remove forwardable bit in SPIRVariable.
  * Consider Volatile in should_forward().
  * Add test for SPIR-V 1.6 Volatile HelperInvocation.
  * MSL: Consider that gl_IsHelperInvocation can be Volatile.

  [ Pedro J. Estébanez ]
  * HLSL: Fix Helper Invocation wrongly allowed in compute.

  [ Bill Hollings ]
  * MSL: Use var name instead of var-type name for flattened interface members.

  [ Hans-Kristian Arntzen ]
  * MSL: Fix minor nits.
  * MSL: Handle aliased variable names for resources placed in IB struct.
  * Fixup names of anonymous inner structs.
  * Avoid redundant meta lookups in ParsedIR when setting member decorations.

  [ Konstantin Pail ]
  * VK_KHR_ray_query implementation

  [ Hans-Kristian Arntzen ]
  * MSL: Handle awkward mix and match of Offset / ArrayStride in constants.
  * HLSL: Update test from review.
  * HLSL: Disable FXC testing for rayquery shaders.

  [ Bill Hollings ]
  * Allow volatile vars that are not builtins to be forwarded.

  [ Roy.li ]
  * Use types have same widths in loop condition.

  [ Hans-Kristian Arntzen ]
  * MSL: Fix goofy bugs in ray query.

 -- john <john@odin>  Mon, 11 Apr 2022 11:30:17 -0600

spirv-cross (2021.01.15+359~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Sebastián Aedo ]
  * Add 64 bit support for OpSwitch
  * Removing logic in the parser
  * Removed unnecessary tracking of types.
  * Fixed wrong condition and formatting.
  * Cast the switch selector in GLSL to uint32_t
  * Added block.cases_32bit and reworked the cases fix

  [ Bill Hollings ]
  * MSL: Don't output depth and stencil values with explicit early fragment tests.

  [ Sebastián Aedo ]
  * Removed tracking of OpConstant and OpPhi.

  [ xinhou ]
  * ESSL: Vertex shader input doesn't support array types.

  [ Sebastián Aedo ]
  * MSL: Add 64 bit switch support
  * Clamp vector element access to vector size.
  * test_shaders: Add the option to generate diff instead.

  [ Nikita Fediuchin ]
  * Fix incorrect MSL gl_TessCoord variable type
  * Fix gl_TessCoord arguments presence. Update reference shaders.

  [ chirsz-ever ]
  * MSL: Allow copy array from UniformConstant storage

  [ Hans-Kristian Arntzen ]
  * MSL: Move float2->3 TessCoord fixup to a better location.
  * Roll dependencies.
  * Test: Add --allow-localsizeid flag for spirv-val.
  * Add support for LocalSizeId.
  * Add sanity test for SPIR-V 1.6 modules.

  [ miomioreimu ]
  * fix: GL_EXT_texture_buffer is more common than GL_OES_texture_buffer

  [ Hans-Kristian Arntzen ]
  * Update references for GL_EXT_texture_buffer.
  * Do not forward expressions which carry a huge amount of dependencies.
  * Rework how loop iteration counts are validated.
  * MSL: Handle signed atomic min/max.
  * MSL: Handle constant construct of block-like array types.
  * Handle aliased names in spec constants.
  * Test aliased names in declared LUTs.
  * MSL: Rethink how opaque descriptors are passed to leaf functions.

  [ John Zupin ]
  * packaging: update copyright

 -- John Zupin <john@odin>  Thu, 03 Feb 2022 14:24:01 -0700

spirv-cross (2021.01.15+276~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Hans-Kristian Arntzen ]
  * Fix switch fallthrough case in some cases.
  * GLSL: Emit GL_EXT_buffer_reference_uvec2 as required.

  [ Bill Hollings ]
  * Add support for additional ops in OpSpecConstantOp.
  * Add tests for OpSpecConstantOp ops OpQuantizeToF16 and OpSRem.
  * MSL: Return fragment function value even when last SPIR-V Op is discard (OpKill).
  * MSL: Add explanatory comment requested in PR review.
  * MSL: Fix location and component variable matching between shader stages.
  * MSL: Selectively enable fast-math in MSL code to match Vulkan CTS results.

  [ Hans-Kristian Arntzen ]
  * Remove obsolete Travis CI YML.
  * Remove tests for Ubuntu 16.04.

  [ Bill Hollings ]
  * MSL: Track location component to match vecsize between shader stages.
  * MSL: Honor DecorationNoContraction when compiling using fast-math.
  * MSL: Honor infinities in OpQuantizeToF16 when compiling using fast-math.
  * MSL: Consolidate spvQuantizeToF16() functions into a single template function.
  * MSL: Use vec<T, n> in template SpvHalfTypeSelector for function spvQuantizeToF16().
  * MSL: Support synthetic functions in function constants.

  [ Hans-Kristian Arntzen ]
  * MSVC: Workaround crtdbg macroing free().
  * CLI/HLSL: Don't set explicit binding for synthesized NumWorkgroups CBV.
  * HLSL: Ensure synthetic NumWorkgroups variable is considered active.
  * Improve handling of INT_MIN/INT64_MIN literals.
  * Fix wrong detection of trivial_mix_op.
  * Test behavior around OpSelect with matrices.

  [ 丛越 ]
  * Support Metal 2.4 Intersection Query, Implement GL_EXT_ray_query.

  [ Bill Hollings ]
  * Per spec, support undefined behavior for out-of-bounds swizzles.

  [ 丛越 ]
  * Fix all requested changes, test_shaders.py supports compiling MSL 2.4 shaders, and the Intersection Query currently only supports MSL 2.4 on the iOS platform.
  * Fix unsupported exceptions for ConvertUToAccelerationStructure & BindingTableRecordOffset.

  [ Hans-Kristian Arntzen ]
  * MSL: Fix some trivial bugs not caught by CI when adding ray query.
  * MSL: Remove some redundant breaks.
  * MSL: Never used templated array for RayQuery objects.

  [ Bill Hollings ]
  * MSL: Support more usecases for unpacked vectors.

  [ Taylor Holliday ]
  * Add Package.swift.

  [ Erfan Ahmadi ]
  * SPIRV-Cross contribution needed for `INTEL_fragment_shader_ordering`

  [ Hans-Kristian Arntzen ]
  * MSL: Workaround compiler crashes when using threadgroup bool.

  [ Bill Hollings ]
  * MSL: Fix type redirection when struct members are reordered to align with offsets.
  * MSL: Remove over-zealous check for struct packing compatibility.

  [ Hans-Kristian Arntzen ]
  * Always use https protocol when cloning external test deps.

  [ Bill Hollings ]
  * MSL: Correctly emit user(clip/cullN) for clip/cull builtins in tess output struct.

  [ Edvin Pettersson ]
  * Fixed potential compilation error in spirv_cross_containers.hpp

  [ Hans-Kristian Arntzen ]
  * Correctly reflect declared buffer size for out of order members.
  * Handle Modf/Frexp in more cases.
  * MSL: Handle non-thread storage class in Modf/Frexp pointer versions.
  * CFG: Handle degenerate selection constructs.
  * GLSL: Deal with buffer_reference_align.

  [ Bill Hollings ]
  * Separate (partially) the tracking of depth images from depth compare ops.

 -- John Zupin <john@odin>  Tue, 16 Nov 2021 16:15:46 -0700

spirv-cross (2021.01.15+200~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Bill Hollings ]
  * MSL: Padding for Metal argument buffers should not double-count SampledImages.

  [ Lukas Taparauskas ]
  * MSL: Fix '--msl-multi-patch-workgroup' out of bounds reads when dispatching more threads than control points (#1662)

  [ Przemog1 ]
  * Fixed 16 bit int types

  [ Hans-Kristian Arntzen ]
  * Update reference output.
  * Honor NoContraction qualifier.
  * HLSL: Implement invariant as precise.
  * MSL: Handle array of IO variable with Component decoration.
  * MSL: Handle array with component when we cannot rely on user() attrib.
  * GLSL: Implement noncoherent framebuffer fetch.
  * MSL: Improve handling of split tessellation access chains.
  * MSL: Add CLI option for sampler suffix.

  [ okuoku ]
  * Fix C sample code in README.md

  [ xndcn ]
  * Add comment after inf/nan float number for clarifying.

  [ Hans-Kristian Arntzen ]
  * MSL: Always enable support for base vertex/index on iOS.
  * Handle odd type for textureGather component.
  * GLSL: Implement control flow hints.
  * Ensure loop control flow hints only appear above loops.

  [ Corentin Wallez ]
  * Fix IVariant -Wdeprecated-copy-with-dtor

  [ Hans-Kristian Arntzen ]
  * Handle SPIR-V 1.4 selection constructs.
  * GLSL: Emit num_views for OVR_multiview2.
  * HLSL: Rewrite how block IO is emitted.

  [ Jon Leech ]
  * Add missing copyright headers.
  * Finish adding SPDX tags and setup a reuse checked in Github Actions CI
  * Actually checkout repo into new reuse job
  * .gitignore ignored new license text

  [ Hans-Kristian Arntzen ]
  * Add GLSL.std.450.h to REUSE.
  * GLSL: Support pervertexNV in NV barycentric extension.

  [ Peter Kasting ]
  * Fix -Wunreachable-code-aggressive.

  [ SpaceIm ]
  * fix cross-build to iOS/tvOS/watchOS

  [ Bill Hollings ]
  * MSL: Fix setting SPIRVCrossDecorationInterpolantComponentExpr decoration.

  [ Hans-Kristian Arntzen ]
  * MSL: Add test for scalar access chain pull interpolant.

  [ Bill Hollings ]
  * MSL: Adjust gl_SampleMaskIn for sample-shading and/or fixed sample mask.

  [ Hans-Kristian Arntzen ]
  * Remove EXPERIMENTAL from JSON reflection backend.
  * MSL: Remove redundant path for SampleMask.
  * GLSL: Implement GL_EXT_ray_query.
  * GLSL: Ensure ray query object decls are flushed if allocated in Function.

  [ Chip Davis ]
  * MSL: Simplify spvSubgroupBallot().

  [ Hans-Kristian Arntzen ]
  * GLSL: Emit precise for fp16/fp64 types as well.
  * Handle value access in terminators.

  [ Bill Hollings ]
  * MSL: Support row-major transpose when storing matrix from constant RHS matrix.
  * MSL: Fix casting in constant expressions with different sizes.
  * MSL: Fix duplicate gl_Position outputs when gl_Position defined but unused.
  * MSL: Add test for fixes to MSL constant expression type down-casting.

  [ Hans-Kristian Arntzen ]
  * Track temporary access for OpArrayLength result.
  * MSL: Consider that function/private variables can be block-like.

  [ John Zupin ]
  * packaging: rebase and update patches

 -- John Zupin <john@odin>  Fri, 27 Aug 2021 15:35:27 -0600

spirv-cross (2021.01.15+124~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Hans-Kristian Arntzen ]
  * MSL: Deal with pointer-to-pointer qualifier ordering.
  * Throw if SPIR-V module has no entry points.
  * GLSL: Add support for Logical subgroup ops.
  * HLSL: Support logical subgroup ops.
  * MSL: Add test for logical subgroup arith ops.
  * Handle edge cases in OpCopyMemory.
  * GLSL: Handle complex load/store scenarios to gl_SampleMask.
  * Add GitHub Actions script.
  * Use Github actions CI tag.

  [ John Zupin ]
  * packaging: update debian/copyright file

  [ Mehmet Oguz Derin ]
  * MSL: Support long ulong types in buffers in 2.3+.
  * Move condition to default block

  [ Hans-Kristian Arntzen ]
  * Fix Github CI in PRs.

  [ Bill Hollings ]
  * MSL: Support padding Metal argument buffer entries based on argument index.

  [ lukas.taparauskas ]
  * c: Add missing API to query active builtins.
  * c: Remove SPVC_PUBLIC_API prefix from API implementation

  [ Bill Hollings ]
  * MSL: Fixes to support padding Metal argument buffer entries based on argument index.
  * MSL: Fixes to support padding Metal argument buffer entries based on argument index.
  * MSL: Fixes to support padding Metal argument buffer entries based on argument index.
  * MSL: Fixes to support padding Metal argument buffer entries based on argument index.

  [ Hans-Kristian Arntzen ]
  * MSVC: Add /bigobj for debug builds.
  * MSL: Sort builtin IO block members by builtin type.
  * Clean up member sorting.
  * MSL: Sketch out API to aid LTO-style optimization.
  * MSL: Correctly emit array type for masked outputs.
  * Add --mask-stage-output-* CLI options.
  * MSL: Do not redirect tess access chains on masked outputs.
  * MSL: Emit threadgroup storage class for masked control point outputs.
  * MSL: Handle effective storage for masked CP outputs.
  * MSL: Do not consider effective storage for any composite.
  * MSL: Add tests for vertex output masking.
  * MSL: Force builtin arrays for builtin array types.
  * MSL: Handle masked outputs in extract_global_variables.
  * MSL: Don't emit weird reference type for spvUnsafeArray types.
  * MSL: Emit correct address space for masked arguments.
  * MSL: Remove position mask tests. They will fail compilation.
  * MSL: Add tests for masking with --for-tess.
  * MSL: Refactor out variable/block member masking.
  * MSL: Fix masking of vertex block outputs.
  * MSL: Explicitly only consider masked variables to be thread-group-like.
  * MSL: Test that we can mask location writes in TESC.
  * MSL: Always emit block variable for block types.
  * MSL: Small refactors.
  * MSL: Temporarily allow empty output struct.
  * MSL: Fix argument_decl check for builtin.
  * MSL: Do not perform scalar fixups for control-point outputs.
  * MSL: Emit a masked builtin IO block if necessary.
  * MSL: Handle masking of builtin control points.
  * MSL: Do not declare patch variables on stack.
  * MSL: Handle flattening of patch block outputs as well.
  * MSL: Rewrite how IO blocks are emitted in multi-patch mode.
  * MSL: Add test for complex control point outputs.
  * MSL: Fixup gl_PerVertex names if we're emitting masked builtins.
  * MSL: Handle masking of TESC IO block members.
  * MSL: Cleanup fallback IO block emission.
  * C: Add C api for stage output masking.
  * MSL: Don't report fallback location allocations as being "used".
  * Fix print_help comment.
  * MSL: Fix initialization of masked threadgroup variables.
  * MSL: Unroll initializations of CullDistance/ClipDistance control points.
  * MSL: Emit multiple threadgroup slices for multi-patch.
  * MSL: Handle CullDistance better.
  * MSL: Test that we can capture cull distance to buffer.
  * MSL: Correctly analyze if builtin block is active.
  * MSL: Handle loading Clip/CullDistance in TESE.
  * MSL: Hoist out to_tesc_invocation_id() in more places.
  * MSL: Use spvUnsafeArray for builtin arrays after all.
  * MSL: Make builtin argument type declaration context sensitive.
  * Check SPIR-V 1.4 rules when reflecting resources.
  * Support reflecting builtins.
  * c: Add C API for builtin stage IO reflection.
  * MSL: Don't emit native array for masked clip/cull distance.
  * MSL: Don't use native arrays for tess level inputs.
  * MSL: Fix copy of arrays to/from stage IO variables.
  * HLSL: Fix automatic location assignment in block IO.
  * MSL: Handle variable access in OpSelect.
  * GLSL: Support GL_EXT_shader_image_load_formatted.
  * GLSL: Implement gl_FragFullyCoveredNV.
  * GLSL: Support shading rate builtins.
  * Rewrite how non-uniform qualifiers are handled.
  * HLSL: Support Shuffle wave ops.
  * MSL: Use proper array for quad tess levels.

 -- John Zupin <john@odin>  Tue, 27 Apr 2021 13:33:34 -0600

spirv-cross (2021.01.15+25~rc2-1lunarg20.04-1) focal; urgency=medium

  * packaging: updated LunarG's copyrights

 -- John Zupin <john@odin>  Thu, 25 Feb 2021 13:53:26 -0700

spirv-cross (2021.01.15+25~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Hans-Kristian Arntzen ]
  * GLSL/HLSL: Disallow VariablePointers capability outright.
  * GLSL: Emit nonuniformEXT in correct place for late-combined samplers.
  * GLSL: Fix KHR subgroup extension table for subgroups.
  * MSL: Handle reserved identifiers for entry point.
  * Handle reserved identifiers for functions.
  * CMake: Disable compiler extensions explicitly.
  * Handle output IO block initializers more robustly.
  * More robust handling of initialized output builtin variables.
  * Minor redundant nit.
  * GLSL: Handle some extreme edge cases in Output variable initialization.
  * GLSL: Add test for initializing tess level output.
  * GLSL: Refactor out Output variable initialization.
  * MSL: Handle initializers for tess levels.
  * MSL: Emit correct initializer for tessellation control points.
  * MSL: Don't flatten builtin arrays unless they're part of IO interface.
  * MSL: Fix initializer for tess level outputs.
  * CLI: Add stdin support.
  * GLSL: Update SPIR-V headers for modified ray tracing opcodes.
  * GLSL: Fix -Wshadow error.
  * MSL: Very slight refactor.
  * MSL: Only consider builtin variables if they are part of IO interface.
  * MSL: Always enable Outputs in vertex stages.
  * MSL: Make sure initialized output builtins are considered active.
  * GLSL: Force block declaration if clip/cull is used in tesc.
  * Add test for pure initializer gl_FragDepth.
  * MSL: Always use input_attachment_index for framebuffer fetch binding.
  * MSL: Fix various bugs with framebuffer fetch on macOS and argument buffers.
  * Roll dependencies.
  * CLI: Fix silly regression with handling of -V.
  * GLSL: Support both SPV_KHR_ray_tracing and NV_ray_tracing.
  * Fix pathological complexity explosion for certain shaders.
  * meta: Update copyright headers to 2021.
  * GLSL: Handle tracing against incoming payload/callable.
  * Deal better with CompositeExtract from constant composite.
  * Handle nonuniformEXT qualifier for acceleration structures.
  * Check entry point variables in is_hidden_variables.

  [ Bill Hollings ]
  * Expose position invariance.

  [ Hans-Kristian Arntzen ]
  * HLSL: Add vector to illegal names list.
  * c: Add missing IOS_SUPPORT_BASE_VERTEX_INSTANCE option.
  * MSL: Always return [[position]] when required.
  * MSL: Fixup type when using tessellation levels in TESC functions.

  [ Peng Huang ]
  * Fix build errors on Windows

  [ Hans-Kristian Arntzen ]
  * Add comment where aux image atomic buffers are reflected from.
  * MSL: Refactor out location consumption count computation.
  * MSL: Gracefully assign automatic input locations to builtin attributes.
  * MSL: Handle load and store to TessLevel array in TESC.

  [ Peng Huang ]
  * Add two missing source files

 -- John Zupin <john@odin>  Mon, 22 Feb 2021 15:29:00 -0700

spirv-cross (2020.09.17+122-1lunarg20.04-1) focal; urgency=medium

  [ Hans-Kristian Arntzen ]
  * GLSL: Use literal array size for cull/clip array sizes.
  * GLSL: Add support for transform_feedback3 geometry streams.

  [ criss ]
  * Resolved issues 1350, 1351, 1352

  [ Hans-Kristian Arntzen ]
  * Update GL subgroup test file.
  * Add missing VK variant of the test file.
  * Style nits for GL subgroup implementation.

  [ Chip Davis ]
  * MSL: Support SPV_EXT_demote_to_helper_invocation for MSL 2.3.
  * MSL: Support atomic access to images from argument buffers.
  * MSL: Add missing interlock handling to atomic image buffers.
  * MSL: Fix calculation of atomic image buffer address.

  [ Hans-Kristian Arntzen ]
  * MSL: Support querying and modifying generated combined sampler suffix.
  * GLSL: Use need_transpose when checking for non-native matrix.

  [ Chip Davis ]
  * MSL: Don't use a bitcast for tessellation levels in tesc shaders.
  * MSL: Handle Offset and Grad operands for 1D-as-2D textures.
  * MSL: Don't remove periods from swizzle buffer index exprs.
  * MSL: Correct definitions of subgroup ballot mask variables.
  * MSL: Support vectors with OpGroupNonUniformAllEqual.
  * MSL: Mask ballots passed to Ballot bit ops.
  * MSL: Cast broadcast booleans to ushort.

  [ Hans-Kristian Arntzen ]
  * Update TravisCI python reference.
  * MSL: Do not use component::x gather for depth2d textures.

  [ Chip Davis ]
  * MSL: For 2.1+, don't disable rasterization for vertex writes.

  [ Hans-Kristian Arntzen ]
  * GLSL: Support a workaround for loading row-major matrices.
  * Handle case where block is loop header, continue AND break block.

  [ Chip Davis ]
  * MSL: Allow post-depth coverage on Mac in MSL 2.3.
  * MSL: Allow framebuffer fetch on Mac in MSL 2.3.

  [ Bill Hollings ]
  * MSL: Support run-time sized image and sampler arrays (GL_EXT_nonuniform_qualifier/SPV_EXT_descriptor_indexing).

  [ Yuwen Wu ]
  * added metal keyworld: "level" (#1501)

  [ atyuwen ]
  * fixed compile error with -std=c++20

  [ Hans-Kristian Arntzen ]
  * GLSL: Fix nonuniformEXT injection.

  [ Chip Davis ]
  * MSL: Allow Bias and Grad arguments with comparison on Mac in MSL 2.3.

  [ Bill Hollings ]
  * Minor format and typo updates from code review.

  [ devsh ]
  * Fix some bad assumptions about emulating `subgroupBarrier`

  [ criss ]
  * Updated ref file for subgroups_basicvoteballot.vk.comp

  [ Bill Hollings ]
  * Syntax and format updates from code review.

  [ Hans-Kristian Arntzen ]
  * Parser: Don't assume OpTypePointer will always take a SPIRType.
  * HLSL: Add option to flatten matrix vertex input semantics.

  [ rdb ]
  * HLSL: Support depth comparison texture sampling in SM 2/3.
  * HLSL: Add regression test for SM3.0 texture samplers
  * HLSL: Support roundEven() in HLSL SM 4.0 and above

  [ Chip Davis ]
  * MSL: Support pull-model interpolation on MSL 2.3+.

  [ Hans-Kristian Arntzen ]
  * MSL: Fix regression in image gather handling.

  [ rdb ]
  * GLSL: Fix support for textureLod in legacy vertex shaders
  * GLSL: Fix round/roundEven for legacy GLSL.
  * GLSL: implement transpose() in GLSL 1.10 / ES 1.00
  * GLSL: Remove unused `lod` argument from legacy_tex_op()
  * GLSL: Add error checking and extension fallback for textureGather

  [ Hans-Kristian Arntzen ]
  * Update texture gather test result.
  * Run format_all.sh.

  [ Jan Sikorski ]
  * MSL: extract global variables from subgroup ballot operations

  [ rdb ]
  * GLSL: Legacy / extension fallbacks for textureSize and texelFetch

  [ Hans-Kristian Arntzen ]
  * Fix switch fallthrough
  * MSL: Add missing reference file.

  [ Chip Davis ]
  * MSL: Expose some more features on iOS.

  [ rdb ]
  * GLSL: Require GL_ARB_vertex_attrib_64bit for double input in pre-4.10

  [ Chip Davis ]
  * MSL: Expand subgroup support.

  [ scribam ]
  * CMake: Set minimum required version to 3.0

  [ Hans-Kristian Arntzen ]
  * Normalize all internal workaround methods to use spv prefix.
  * HLSL: Fix validation with FXC for test.
  * GLSL: Emit storage qualifiers for buffer_reference.
  * GLSL: Fix buffer_reference with aliased names.

  [ Chip Davis ]
  * MSL: Adjust FragCoord for sample-rate shading.
  * MSL: Don't mask off inactive bits in ballot masks.

  [ comex ]
  * spirv_msl: Don't add fixup hooks for builtin variables if they're unused.
  * msl: Don't try to use [[thread_index_in_simdgroup]] in vertex shaders.

  [ Jan Sikorski ]
  * MSL: Added fmin3 and fmax3 library functions to the illegal name list.

  [ Hans-Kristian Arntzen ]
  * Add MIT dual license for the SPIRV-Cross API.

  [ John Zupin ]
  * packaging: update copyright

 -- John Zupin <john@odin>  Tue, 08 Dec 2020 10:31:39 -0700

spirv-cross (2020.09.17+6-1lunarg20.04-1) focal; urgency=medium

  [ Tomek Ponitka ]
  * Adding BuiltInSampleMask in HLSL

  [ Hans-Kristian Arntzen ]
  * GLSL: Add option to force flattening IO blocks.
  * Only rewrite type aliases for the base type.
  * GLSL: Be more aggressive about using type_alias.
  * Ensure that we use primary alias type when emitting flattened members.
  * Add some test cases for complex type aliasing scenario.

  [ John Zupin ]
  * debian: remove README.Debian

  [ Chip Davis ]
  * MSL: Fix handling of matrices and structs in the output control point array.

  [ Le Hoang Quyen ]
  * Fix #1445: MSL: Enclose args when convert distance(a,b) to abs(a-b)

  [ Hans-Kristian Arntzen ]
  * HLSL: Fix bug in is_packing_standard for cbuffer.
  * HLSL: Deal with partially filled 16-byte word in cbuffers.
  * HLSL: Fix FragCoord.w.
  * Overhaul how we deal with reserved identifiers.
  * Work around annoying warning on GCC 10.2.
  * Run format_all.sh.

  [ Chip Davis ]
  * MSL: Fix multiview view index calculation with a non-zero base instance.
  * MSL: Don't set the layer for multiview if the device doesn't support it.

  [ Hans-Kristian Arntzen ]
  * MSL: Fix OpCompositeInsert and OpVectorInsertDynamic.

  [ Chip Davis ]
  * MSL: Support layered input attachments.

  [ Hans-Kristian Arntzen ]
  * Handle OpUndef %void.
  * Roll glslang/SPIRV-Tools deps.

  [ Corentin Wallez ]
  * Fix -Wduplicate-enum and -Wrange-for-analysis.

  [ Hans-Kristian Arntzen ]
  * Implement a simple evaluator of specialization constants.
  * Deal with case where a selection construct conditionally merges/breaks.
  * Clean up conditional branch codegen.

  [ dan sinclair ]
  * Roll dependencies.

  [ Hans-Kristian Arntzen ]
  * Allow flip_vert_y in all relevant stages.
  * Work around MSVC warning.

 -- John Zupin <john@odin>  Mon, 28 Sep 2020 16:57:04 -0600

spirv-cross (2020.06.29+27-1ubuntu20.04-3) focal; urgency=medium

  * install: update to add so.0 to dev

 -- John Zupin <john@odin>  Wed, 29 Jul 2020 15:42:52 -0600

spirv-cross (2020.06.29+27-1ubuntu20.04-2) focal; urgency=medium

  * control: breaks/replaces because of fix
  * install: install the .so in the dev package

 -- John Zupin <john@odin>  Wed, 29 Jul 2020 15:07:43 -0600

spirv-cross (2020.06.29+27-1lunarg20.04-1) focal; urgency=medium

  [ Hans-Kristian Arntzen ]
  * HLSL: Add native support for 16-bit types.
  * MSL: Remove obsolete MSLVertexAttr members.
  * GLSL: Implement sparse feedback.

  [ Alexander Meißner ]
  * Fix missing switch cases in Y'CbCr conversion

  [ Hans-Kristian Arntzen ]
  * Refactor texture fetch function generation.
  * GLSL: Support uint code for sparse residency query.
  * GLSL: Handle the rest of GL_ARB_sparse_texture_clamp.

  [ rdb ]
  * GLSL: Require GL_ARB_draw_instanced for gl_InstanceID in GLSL < 1.40

  [ Hans-Kristian Arntzen ]
  * HLSL: Fix texProj in legacy HLSL.

  [ Chip Davis ]
  * MSL: Fix up input variables' vector lengths in all stages.

  [ Hans-Kristian Arntzen ]
  * Remove unused member in MSLShaderInput.
  * Clean up some deprecation warnings when building with Makefile.
  * MSL: Improve handling of array types in buffer objects.
  * MSL: Add tests for array copies in and out of buffers.
  * MSL: Deal with loading non-value-type arrays.
  * MSL: Add test case for constructing struct with non-value-type array.
  * Fix duplicated initialization for loop variables with initializers.

  [ Corentin Wallez ]
  * Fix placement of SPIRV_CROSS_DEPRECATED.

  [ Hans-Kristian Arntzen ]
  * MSL: Remove the old VertexAttr API.

  [ dan sinclair ]
  * Roll deps and update tests.

  [ Hans-Kristian Arntzen ]
  * HLSL: Workaround FXC bugs with degenerate switch blocks.

  [ John Zupin ]
  * patch: remove the root makefile so we can use cmake
  * packages: remove backup files
  * package: add spirv-cross-dev package

  [ Hans-Kristian Arntzen ]
  * Fix bug with control dependent expression tracking.
  * Implement context-sensitive expression read tracking.
  * GLSL: Use for-loop fallback instead of do/while for legacy ESSL.
  * GLSL: Implement switch on ESSL 1.0.
  * GLSL: Fix nested legacy switch workarounds.
  * test: Use --hlsl-dx9-compatible when attempting to compile SM 3.0 shaders.
  * Run format_all.sh.
  * GLSL: Support multi-level struct flattening for I/O.
  * GLSL: Support I/O flattening with arrays as final type.
  * MSL: Use input attachment index directly for resource index fallback.
  * MSL: Workaround broken vector -> scalar access chain in MSL.
  * MSL: Do not emit swizzled writes in packing fixups.

  [ dan sinclair ]
  * Roll deps.

  [ Thomas Roughton ]
  * MSL: Ensure OpStore source operands are marked for inclusion in function arguments

  [ Hans-Kristian Arntzen ]
  * Merging with 2020-06-29 tag for testing

  [ John Zupin ]
  * update patch to fix Makefile

  [ Hans-Kristian Arntzen ]
  * MSVC 2013: Fix silently broken builds.

  [ John Zupin ]
  * copyright: update for release

  [ Chip Davis ]
  * MSL: Factor a really gnarly condition into its own method.
  * MSL: Factor creating a uint type into its own method.

  [ dan sinclair ]
  * Roll GLSLang, SPIRV-Headers and SPIRV-Tools.

  [ Chip Davis ]
  * MSL: Add support for processing more than one patch per workgroup.

  [ Tomek Ponitka ]
  * Enabling setting a fixed sampleMask in Metal fragment shaders.

  [ John Zupin ]
  * copyright: updated for lunarg debian files

 -- John Zupin <john@odin>  Mon, 27 Jul 2020 15:02:04 -0600

spirv-cross (2020.5.19+18-1) bionic; urgency=medium

  * Initial release

 -- John Zupin <john@unknown>  Tue, 23 Jun 2020 14:23:20 -0600
